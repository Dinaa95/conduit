{"uid":"ce8c748bcb3bdea7","name":"test_registration","fullName":"test.test_conduit.TestConduit#test_registration","historyId":"449695f6039cc9b1b387a819d6e9ef14","time":{"start":1654101076266,"stop":1654101082079,"duration":5813},"status":"failed","statusMessage":"AssertionError: assert 'Your registr...s successful!' == 'Email already taken.'\n  - Email already taken.\n  + Your registration was successful!","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5dddaf3430>\n\n    def test_registration(self):\n        # navigate to register page\n        main_register_btn = self.browser.find_element_by_xpath('//a[@href=\"#/register\"]')\n        main_register_btn.click()\n        # find elements\n        username_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password_input = self.browser.find_element_by_xpath('//input[@type=\"password\"]')\n        sign_up_btn = self.browser.find_element_by_xpath('//button[contains(text(), \"Sign up\")]')\n        # asserts: the inputs are available\n        assert username_input.is_enabled()\n        assert email_input.is_enabled()\n        assert password_input.is_enabled()\n        # fill inputs with data (from login_data)\n        username_input.send_keys(registered['username'])\n        email_input.send_keys(registered['email'])\n        password_input.send_keys(registered['password'])\n        # send data\n        sign_up_btn.click()\n        time.sleep(5)\n        # wait for error message\n        error_msg = self.browser.find_element_by_xpath('//div[@class=\"swal-text\"]')\n        # error_msg = self.browser.find_element_by_xpath('//div[text()=\"Email already taken. \"]')\n        # assert error message displayed\n>       assert error_msg.text == 'Email already taken.'\nE       AssertionError: assert 'Your registr...s successful!' == 'Email already taken.'\nE         - Email already taken.\nE         + Your registration was successful!\n\ntest/test_conduit.py:86: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654101074693,"stop":1654101076265,"duration":1572},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'Your registr...s successful!' == 'Email already taken.'\n  - Email already taken.\n  + Your registration was successful!","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5dddaf3430>\n\n    def test_registration(self):\n        # navigate to register page\n        main_register_btn = self.browser.find_element_by_xpath('//a[@href=\"#/register\"]')\n        main_register_btn.click()\n        # find elements\n        username_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password_input = self.browser.find_element_by_xpath('//input[@type=\"password\"]')\n        sign_up_btn = self.browser.find_element_by_xpath('//button[contains(text(), \"Sign up\")]')\n        # asserts: the inputs are available\n        assert username_input.is_enabled()\n        assert email_input.is_enabled()\n        assert password_input.is_enabled()\n        # fill inputs with data (from login_data)\n        username_input.send_keys(registered['username'])\n        email_input.send_keys(registered['email'])\n        password_input.send_keys(registered['password'])\n        # send data\n        sign_up_btn.click()\n        time.sleep(5)\n        # wait for error message\n        error_msg = self.browser.find_element_by_xpath('//div[@class=\"swal-text\"]')\n        # error_msg = self.browser.find_element_by_xpath('//div[text()=\"Email already taken. \"]')\n        # assert error message displayed\n>       assert error_msg.text == 'Email already taken.'\nE       AssertionError: assert 'Your registr...s successful!' == 'Email already taken.'\nE         - Email already taken.\nE         + Your registration was successful!\n\ntest/test_conduit.py:86: AssertionError","steps":[],"attachments":[{"uid":"8d179fe67d07390","name":"log","source":"8d179fe67d07390.txt","type":"text/plain","size":338},{"uid":"ab56a611b2b04aa6","name":"stdout","source":"ab56a611b2b04aa6.txt","type":"text/plain","size":1},{"uid":"2fe82367fcf1ff39","name":"stderr","source":"2fe82367fcf1ff39.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654101082124,"stop":1654101082181,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az203-770"},{"name":"thread","value":"3101-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ce8c748bcb3bdea7.json","parameterValues":[]}