{"uid":"c4b1ba81c7d8584f","name":"test_collect_data","fullName":"test.test_conduit.TestConduit#test_collect_data","historyId":"b8ff59b9978ca6c1c37db19d004e37a6","time":{"start":1654072517619,"stop":1654072520009,"duration":2390},"status":"broken","statusMessage":"TypeError: can only concatenate str (not \"NoneType\") to str","statusTrace":"self = <test_conduit.TestConduit object at 0x7fded463c910>\n\n    def test_collect_data(self):\n        # run login function\n        login(self)\n        # navigate to the specific user's profile\n        user_profile_link = 'http://localhost:1667/#/@thetester/'\n        self.browser.get(user_profile_link)\n        time.sleep(1)\n        # find elements\n        profile_pic_link = self.browser.find_element_by_xpath('//img[@class=\"user-img\"]')\n        user_name = self.browser.find_element_by_xpath('//div[@class=\"profile-page\"]/div[1]/div/div/div/h4')\n        user_bio = self.browser.find_element_by_xpath('//div[@class=\"profile-page\"]/div[1]/div/div/div/p')\n        user_article_titles = self.browser.find_elements_by_xpath('//h1')\n        # open or create a file, collect data and fill the file with them\n        with open('test/collected_data.txt', 'a', encoding='UTF-8') as data_collection:\n            # username\n            data_collection.write('Current user\\'s name: \\n' + user_name.text + '\\n')\n            # picture link\n>           data_collection.write('Profile picture link: \\n' + profile_pic_link.get_attribute('src') + '\\n')\nE           TypeError: can only concatenate str (not \"NoneType\") to str\n\ntest/test_conduit.py:247: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654072516026,"stop":1654072517617,"duration":1591},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"TypeError: can only concatenate str (not \"NoneType\") to str","statusTrace":"self = <test_conduit.TestConduit object at 0x7fded463c910>\n\n    def test_collect_data(self):\n        # run login function\n        login(self)\n        # navigate to the specific user's profile\n        user_profile_link = 'http://localhost:1667/#/@thetester/'\n        self.browser.get(user_profile_link)\n        time.sleep(1)\n        # find elements\n        profile_pic_link = self.browser.find_element_by_xpath('//img[@class=\"user-img\"]')\n        user_name = self.browser.find_element_by_xpath('//div[@class=\"profile-page\"]/div[1]/div/div/div/h4')\n        user_bio = self.browser.find_element_by_xpath('//div[@class=\"profile-page\"]/div[1]/div/div/div/p')\n        user_article_titles = self.browser.find_elements_by_xpath('//h1')\n        # open or create a file, collect data and fill the file with them\n        with open('test/collected_data.txt', 'a', encoding='UTF-8') as data_collection:\n            # username\n            data_collection.write('Current user\\'s name: \\n' + user_name.text + '\\n')\n            # picture link\n>           data_collection.write('Profile picture link: \\n' + profile_pic_link.get_attribute('src') + '\\n')\nE           TypeError: can only concatenate str (not \"NoneType\") to str\n\ntest/test_conduit.py:247: TypeError","steps":[],"attachments":[{"uid":"4ed1e3eb995db752","name":"log","source":"4ed1e3eb995db752.txt","type":"text/plain","size":338},{"uid":"5843675bf27d27c1","name":"stdout","source":"5843675bf27d27c1.txt","type":"text/plain","size":1},{"uid":"8b2badc57beb62b4","name":"stderr","source":"8b2badc57beb62b4.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654072520018,"stop":1654072520073,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az426-198"},{"name":"thread","value":"3079-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c4b1ba81c7d8584f.json","parameterValues":[]}