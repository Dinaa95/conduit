{"uid":"308da340705e49fd","name":"test_registration","fullName":"test.test_conduit.TestConduit#test_registration","historyId":"449695f6039cc9b1b387a819d6e9ef14","time":{"start":1654101510835,"stop":1654101516618,"duration":5783},"status":"failed","statusMessage":"AssertionError: assert 'Your registr...s successful!' == 'Email already taken. '\n  - Email already taken. \n  + Your registration was successful!","statusTrace":"self = <test_conduit.TestConduit object at 0x7f6c1fca2700>\n\n    def test_registration(self):\n        # navigate to register page\n        main_register_btn = self.browser.find_element_by_xpath('//a[@href=\"#/register\"]')\n        main_register_btn.click()\n        # find elements\n        username_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password_input = self.browser.find_element_by_xpath('//input[@type=\"password\"]')\n        sign_up_btn = self.browser.find_element_by_xpath('//button[contains(text(), \"Sign up\")]')\n        # asserts: the inputs are available\n        assert username_input.is_enabled()\n        assert email_input.is_enabled()\n        assert password_input.is_enabled()\n        # fill inputs with data (from login_data)\n        username_input.send_keys(registered['username'])\n        email_input.send_keys(registered['email'])\n        password_input.send_keys(registered['password'])\n        # send data\n        sign_up_btn.click()\n        time.sleep(5)\n        # wait for error message\n        error_msg = self.browser.find_element_by_xpath('//div[@class=\"swal-modal\"]/div[@class=\"swal-text\"]')\n        # error_msg = self.browser.find_element_by_xpath('//div[text()=\"Email already taken. \"]')\n        # assert error message displayed\n>       assert error_msg.text == 'Email already taken. '\nE       AssertionError: assert 'Your registr...s successful!' == 'Email already taken. '\nE         - Email already taken. \nE         + Your registration was successful!\n\ntest/test_conduit.py:86: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654101509119,"stop":1654101510834,"duration":1715},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'Your registr...s successful!' == 'Email already taken. '\n  - Email already taken. \n  + Your registration was successful!","statusTrace":"self = <test_conduit.TestConduit object at 0x7f6c1fca2700>\n\n    def test_registration(self):\n        # navigate to register page\n        main_register_btn = self.browser.find_element_by_xpath('//a[@href=\"#/register\"]')\n        main_register_btn.click()\n        # find elements\n        username_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email_input = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password_input = self.browser.find_element_by_xpath('//input[@type=\"password\"]')\n        sign_up_btn = self.browser.find_element_by_xpath('//button[contains(text(), \"Sign up\")]')\n        # asserts: the inputs are available\n        assert username_input.is_enabled()\n        assert email_input.is_enabled()\n        assert password_input.is_enabled()\n        # fill inputs with data (from login_data)\n        username_input.send_keys(registered['username'])\n        email_input.send_keys(registered['email'])\n        password_input.send_keys(registered['password'])\n        # send data\n        sign_up_btn.click()\n        time.sleep(5)\n        # wait for error message\n        error_msg = self.browser.find_element_by_xpath('//div[@class=\"swal-modal\"]/div[@class=\"swal-text\"]')\n        # error_msg = self.browser.find_element_by_xpath('//div[text()=\"Email already taken. \"]')\n        # assert error message displayed\n>       assert error_msg.text == 'Email already taken. '\nE       AssertionError: assert 'Your registr...s successful!' == 'Email already taken. '\nE         - Email already taken. \nE         + Your registration was successful!\n\ntest/test_conduit.py:86: AssertionError","steps":[],"attachments":[{"uid":"e8dfac97bd382edf","name":"log","source":"e8dfac97bd382edf.txt","type":"text/plain","size":338},{"uid":"fc749ed0efd32fcb","name":"stdout","source":"fc749ed0efd32fcb.txt","type":"text/plain","size":1},{"uid":"2d963011ded14156","name":"stderr","source":"2d963011ded14156.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654101516670,"stop":1654101516730,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az459-243"},{"name":"thread","value":"3091-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"308da340705e49fd.json","parameterValues":[]}